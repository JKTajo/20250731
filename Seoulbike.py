{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyPO5FmTa0qqBgiZ7W9BwKaf",
      "include_colab_link": True
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/JKTajo/20250731/blob/main/Seoulbike.ipynb\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": None,
      "metadata": {
        "id": "wC3bH50cJNma"
      },
      "outputs": [],
      "source": [
        "# Install dependencies as needed:\n",
        "# pip install kagglehub[pandas-datasets]\n",
        "import kagglehub\n",
        "from kagglehub import KaggleDatasetAdapter\n",
        "\n",
        "# Set the path to the file you'd like to load\n",
        "file_path = \"\"\n",
        "\n",
        "# Load the latest version\n",
        "df = kagglehub.load_dataset(\n",
        "  KaggleDatasetAdapter.PANDAS,\n",
        "  \"saurabhshahane/seoul-bike-sharing-demand-prediction\",\n",
        "  file_path,\n",
        "  # Provide any additional arguments like\n",
        "  # sql_query or pandas_kwargs. See the\n",
        "  # documenation for more information:\n",
        "  # https://github.com/Kaggle/kagglehub/blob/main/README.md#kaggledatasetadapterpandas\n",
        ")\n",
        "\n",
        "print(\"First 5 records:\", df.head())\n",
        "\n",
        "import streamlit as st\n",
        "import pandas as pd\n",
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns\n",
        "import kagglehub\n",
        "from kagglehub import KaggleDatasetAdapter\n",
        "\n",
        "# Load dataset\n",
        "file_path = \"SeoulBikeData.csv\"  # 파일 이름은 실제 데이터셋에 따라 수정 필요\n",
        "df = kagglehub.load_dataset(\n",
        "    KaggleDatasetAdapter.PANDAS,\n",
        "    \"saurabhshahane/seoul-bike-sharing-demand-prediction\",\n",
        "    file_path\n",
        ")\n",
        "\n",
        "# 사이드바\n",
        "st.sidebar.title(\"🚲 서울 자전거 수요 예측\")\n",
        "st.sidebar.subheader(\"Kaggle 데이터 기반\")\n",
        "st.sidebar.markdown(\n",
        "    \"\"\"\n",
        "    이 앱은 서울의 자전거 대여 수요 데이터를 시각화하고,\n",
        "    사용자 입력에 따라 특정 인덱스 데이터를 확인할 수 있는 기능을 제공합니다.\n",
        "    \"\"\"\n",
        ")\n",
        "\n",
        "# 탭 3개 생성\n",
        "tab1, tab2, tab3 = st.tabs([\"📌 요약\", \"📊 전체 데이터 보기\", \"🔍 인덱스별 분석\"])\n",
        "\n",
        "# =====================\n",
        "# 📌 Tab 1: 요약 탭\n",
        "# =====================\n",
        "with tab1:\n",
        "    st.header(\"📌 데이터 요약\")\n",
        "    st.markdown(\"데이터셋의 기본 정보와 통계를 확인할 수 있습니다.\")\n",
        "    st.write(\"**기본 정보**\")\n",
        "    st.dataframe(df.head())\n",
        "    st.write(\"**통계 요약**\")\n",
        "    st.dataframe(df.describe())\n",
        "\n",
        "# =====================\n",
        "# 📊 Tab 2: 전체 데이터\n",
        "# =====================\n",
        "with tab2:\n",
        "    st.header(\"📊 전체 데이터 보기\")\n",
        "    st.dataframe(df)\n",
        "\n",
        "# =====================\n",
        "# 🔍 Tab 3: 인덱스 지정 분석\n",
        "# =====================\n",
        "import streamlit as st\n",
        "import pandas as pd\n",
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns\n",
        "import kagglehub\n",
        "from kagglehub import KaggleDatasetAdapter\n",
        "\n",
        "# Load dataset\n",
        "file_path = \"SeoulBikeData.csv\"  # 파일 이름은 실제 데이터셋에 따라 수정 필요\n",
        "df = kagglehub.load_dataset(\n",
        "    KaggleDatasetAdapter.PANDAS,\n",
        "    \"saurabhshahane/seoul-bike-sharing-demand-prediction\",\n",
        "    file_path\n",
        ")\n",
        "\n",
        "# 사이드바\n",
        "st.sidebar.title(\"🚲 서울 자전거 수요 예측\")\n",
        "st.sidebar.subheader(\"Kaggle 데이터 기반\")\n",
        "st.sidebar.markdown(\n",
        "    \"\"\"\n",
        "    이 앱은 서울의 자전거 대여 수요 데이터를 시각화하고,\n",
        "    사용자 입력에 따라 특정 인덱스 데이터를 확인할 수 있는 기능을 제공합니다.\n",
        "    \"\"\"\n",
        ")\n",
        "\n",
        "# 탭 3개 생성\n",
        "tab1, tab2, tab3 = st.tabs([\"📌 요약\", \"📊 전체 데이터 보기\", \"🔍 인덱스별 분석\"])\n",
        "\n",
        "# =====================\n",
        "# 📌 Tab 1: 요약 탭\n",
        "# =====================\n",
        "with tab1:\n",
        "    st.header(\"📌 데이터 요약\")\n",
        "    st.markdown(\"데이터셋의 기본 정보와 통계를 확인할 수 있습니다.\")\n",
        "    st.write(\"**기본 정보**\")\n",
        "    st.dataframe(df.head())\n",
        "    st.write(\"**통계 요약**\")\n",
        "    st.dataframe(df.describe())\n",
        "\n",
        "# =====================\n",
        "# 📊 Tab 2: 전체 데이터\n",
        "# =====================\n",
        "with tab2:\n",
        "    st.header(\"📊 전체 데이터 보기\")\n",
        "    st.dataframe(df)\n",
        "\n",
        "# =====================\n",
        "# 🔍 Tab 3: 인덱스 지정 분석\n",
        "# =====================\n",
        "with tab3:\n",
        "    st.header(\"🔍 인덱스별 분석 및 시각화\")\n",
        "\n",
        "    # 정렬 옵션\n",
        "    sort_column = st.selectbox(\"정렬할 컬럼을 선택하세요\", df.columns)\n",
        "    ascending = st.radio(\"정렬 방식 선택\", (\"오름차순\", \"내림차순\")) == \"오름차순\"\n",
        "    sorted_df = df.sort_values(by=sort_column, ascending=ascending)\n",
        "\n",
        "    # 그래프 (예: 대여량 히스토그램)\n",
        "    st.subheader(\"🎯 대여량 히스토그램\")\n",
        "    fig, ax = plt.subplots()\n",
        "    sns.histplot(sorted_df['Rented Bike Count'], bins=30, kde=True, ax=ax)\n",
        "    st.pyplot(fig)\n",
        "\n",
        "    # 인덱스 선택\n",
        "    index_input = st.number_input(\"확인할 인덱스를 입력하세요\", min_value=0, max_value=len(df)-1, value=0, step=1)\n",
        "\n",
        "    # 선택된 인덱스 출력\n",
        "    st.subheader(\"📌 선택된 인덱스 데이터\")\n",
        "    st.dataframe(sorted_df.iloc[[index_input]])"
      ]
    }
  ]
}
